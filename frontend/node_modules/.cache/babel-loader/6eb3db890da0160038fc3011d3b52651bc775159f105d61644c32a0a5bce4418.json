{"ast":null,"code":"import React, { Component } from 'react';\nimport './index.css';\nclass Jobs extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      searchTerm: '',\n      locationFilter: '',\n      sortBy: 'newest'\n    };\n    this.handleSearch = e => {\n      this.setState({\n        searchTerm: e.target.value\n      });\n    };\n    this.handleLocationFilter = e => {\n      this.setState({\n        locationFilter: e.target.value\n      });\n    };\n    this.handleSortChange = e => {\n      this.setState({\n        sortBy: e.target.value\n      });\n    };\n    this.getFilteredJobs = () => {\n      const {\n        allJobs = []\n      } = this.props;\n      // const { allJobs } = this.props;\n      const {\n        searchTerm,\n        locationFilter,\n        sortBy\n      } = this.state;\n      let filteredJobs = allJobs.filter(job => {\n        const matchesSearch = job.title.toLowerCase().includes(searchTerm.toLowerCase()) || job.company.toLowerCase().includes(searchTerm.toLowerCase());\n        const matchesLocation = locationFilter === '' || job.location.toLowerCase().includes(locationFilter.toLowerCase());\n        return matchesSearch && matchesLocation;\n      });\n      if (sortBy === 'newest') {\n        filteredJobs.sort((a, b) => new Date(b.datePosted || 0) - new Date(a.datePosted || 0));\n      } else if (sortBy === 'salary-high') {\n        filteredJobs.sort((a, b) => {\n          const getSalary = salary => parseInt(salary.replace(/[^0-9]/g, ''), 10) || 0;\n          return getSalary(b.salary) - getSalary(a.salary);\n        });\n      }\n      return filteredJobs;\n    };\n  }\n}\nexport default Jobs;","map":{"version":3,"names":["React","Component","Jobs","constructor","args","state","searchTerm","locationFilter","sortBy","handleSearch","e","setState","target","value","handleLocationFilter","handleSortChange","getFilteredJobs","allJobs","props","filteredJobs","filter","job","matchesSearch","title","toLowerCase","includes","company","matchesLocation","location","sort","a","b","Date","datePosted","getSalary","salary","parseInt","replace"],"sources":["C:/Users/surya/Desktop/Aman Shrivastava/frontend/src/components/Jobs/index.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport './index.css';\r\n\r\nclass Jobs extends Component {\r\n  state = {\r\n    searchTerm: '',\r\n    locationFilter: '',\r\n    sortBy: 'newest'\r\n  };\r\n\r\n  handleSearch = (e) => {\r\n    this.setState({ searchTerm: e.target.value });\r\n  };\r\n\r\n  handleLocationFilter = (e) => {\r\n    this.setState({ locationFilter: e.target.value });\r\n  };\r\n\r\n  handleSortChange = (e) => {\r\n    this.setState({ sortBy: e.target.value });\r\n  };\r\n\r\n  getFilteredJobs = () => {\r\n    const { allJobs = [] } = this.props;\r\n    // const { allJobs } = this.props;\r\n    const { searchTerm, locationFilter, sortBy } = this.state;\r\n\r\n    \r\n    let filteredJobs = allJobs.filter(job => {\r\n      const matchesSearch = job.title.toLowerCase().includes(searchTerm.toLowerCase()) || \r\n                          job.company.toLowerCase().includes(searchTerm.toLowerCase());\r\n      const matchesLocation = locationFilter === '' || \r\n                            job.location.toLowerCase().includes(locationFilter.toLowerCase());\r\n      return matchesSearch && matchesLocation;\r\n    });\r\n\r\n    \r\n    if (sortBy === 'newest') {\r\n      filteredJobs.sort((a, b) => new Date(b.datePosted || 0) - new Date(a.datePosted || 0));\r\n    } else if (sortBy === 'salary-high') {\r\n      filteredJobs.sort((a, b) => {\r\n        const getSalary = (salary) => parseInt(salary.replace(/[^0-9]/g, ''), 10) || 0;\r\n        return getSalary(b.salary) - getSalary(a.salary);\r\n      });\r\n    }\r\n\r\n    return filteredJobs;\r\n  };\r\n\r\n  \r\n}\r\n\r\nexport default Jobs;"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAO,aAAa;AAEpB,MAAMC,IAAI,SAASD,SAAS,CAAC;EAAAE,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAAA,KAC3BC,KAAK,GAAG;MACNC,UAAU,EAAE,EAAE;MACdC,cAAc,EAAE,EAAE;MAClBC,MAAM,EAAE;IACV,CAAC;IAAA,KAEDC,YAAY,GAAIC,CAAC,IAAK;MACpB,IAAI,CAACC,QAAQ,CAAC;QAAEL,UAAU,EAAEI,CAAC,CAACE,MAAM,CAACC;MAAM,CAAC,CAAC;IAC/C,CAAC;IAAA,KAEDC,oBAAoB,GAAIJ,CAAC,IAAK;MAC5B,IAAI,CAACC,QAAQ,CAAC;QAAEJ,cAAc,EAAEG,CAAC,CAACE,MAAM,CAACC;MAAM,CAAC,CAAC;IACnD,CAAC;IAAA,KAEDE,gBAAgB,GAAIL,CAAC,IAAK;MACxB,IAAI,CAACC,QAAQ,CAAC;QAAEH,MAAM,EAAEE,CAAC,CAACE,MAAM,CAACC;MAAM,CAAC,CAAC;IAC3C,CAAC;IAAA,KAEDG,eAAe,GAAG,MAAM;MACtB,MAAM;QAAEC,OAAO,GAAG;MAAG,CAAC,GAAG,IAAI,CAACC,KAAK;MACnC;MACA,MAAM;QAAEZ,UAAU;QAAEC,cAAc;QAAEC;MAAO,CAAC,GAAG,IAAI,CAACH,KAAK;MAGzD,IAAIc,YAAY,GAAGF,OAAO,CAACG,MAAM,CAACC,GAAG,IAAI;QACvC,MAAMC,aAAa,GAAGD,GAAG,CAACE,KAAK,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACnB,UAAU,CAACkB,WAAW,CAAC,CAAC,CAAC,IAC5DH,GAAG,CAACK,OAAO,CAACF,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACnB,UAAU,CAACkB,WAAW,CAAC,CAAC,CAAC;QAChF,MAAMG,eAAe,GAAGpB,cAAc,KAAK,EAAE,IACvBc,GAAG,CAACO,QAAQ,CAACJ,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAClB,cAAc,CAACiB,WAAW,CAAC,CAAC,CAAC;QACvF,OAAOF,aAAa,IAAIK,eAAe;MACzC,CAAC,CAAC;MAGF,IAAInB,MAAM,KAAK,QAAQ,EAAE;QACvBW,YAAY,CAACU,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK,IAAIC,IAAI,CAACD,CAAC,CAACE,UAAU,IAAI,CAAC,CAAC,GAAG,IAAID,IAAI,CAACF,CAAC,CAACG,UAAU,IAAI,CAAC,CAAC,CAAC;MACxF,CAAC,MAAM,IAAIzB,MAAM,KAAK,aAAa,EAAE;QACnCW,YAAY,CAACU,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;UAC1B,MAAMG,SAAS,GAAIC,MAAM,IAAKC,QAAQ,CAACD,MAAM,CAACE,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC;UAC9E,OAAOH,SAAS,CAACH,CAAC,CAACI,MAAM,CAAC,GAAGD,SAAS,CAACJ,CAAC,CAACK,MAAM,CAAC;QAClD,CAAC,CAAC;MACJ;MAEA,OAAOhB,YAAY;IACrB,CAAC;EAAA;AAGH;AAEA,eAAejB,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}